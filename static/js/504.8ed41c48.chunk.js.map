{"version":3,"file":"static/js/504.8ed41c48.chunk.js","mappings":"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","sources":["components/ButtonLoadMore/ButtonLoadMore.jsx","utility/mockApi.js","refs/refs.js","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["const ButtonLoadMore = ({ setPageParams, pageParams }) => {\n  return (\n    <button type=\"button\" onClick={() => setPageParams(pageParams + 1)}>\n      {' '}\n      Load more\n    </button>\n  );\n};\n\nexport default ButtonLoadMore;\n","//https://644bd7ef4bdbc0cc3a9c1bc1.mockapi.io/api/tweets/tweets/tweets\n\nimport axios from 'axios';\nimport { baseUrl, limit, totalPage } from 'refs/refs';\n\naxios.defaults.baseURL = baseUrl;\nconst params = new URLSearchParams({\n  limit,\n  totalPage,\n});\nconsole.log(params);\nexport const getHeroData = async page => {\n  try {\n    const { data } = await axios.get(\n      `/api/tweets/tweets?${params}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateDataFollowing = async (userId, userFollowers) => {\n  try {\n    const { data } = await axios.put(`/api/tweets/tweets/${userId}`, {\n      followers: userFollowers,\n    });\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n","export const baseUrl = 'https://644bd7ef4bdbc0cc3a9c1bc1.mockapi.io';\nexport const limit = 6;\nexport const totalPage = 2;\n","import styled from 'styled-components';\nimport bg from '../../images/picture.png';\n\nexport const List = styled.ul`\n  padding: 20px;\n`;\nexport const Item = styled.li`\n  width: 380px;\n  height: 460px;\n  position: relative;\n  background: ${p => p.theme.colors.background};\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  background-repeat: no-repeat;\n  /* background-position: 36px 28px; */\n`;\nexport const BoxLogo = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\nexport const Box = styled.div`\n  background: url(${bg}) no-repeat;\n  display: flex;\n  gap: 26px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 178px;\n  background-position: 36px 28px;\n  &::before {\n    content: '';\n    position: absolute;\n    width: 380px;\n    height: 8px;\n    top: 210px;\n    background: ${p => p.theme.colors.white};\n  }\n`;\nexport const Img = styled.img`\n  z-index: 10;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nexport const Text = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${p => p.theme.colors.white};\n`;\n// ${p => p.theme.colors.white};\nexport const Button = styled.button`\n  /* background: ${({ isFollowing }) =>\n    (!isFollowing && '#EBD8FF') || (isFollowing && '#5CD3A8')}; */\n  background: ${p => p.theme.colors.white};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 196px;\n  height: 50px;\n  border: none;\n\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.SemiBold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.black};\n`;\n","import ButtonLoadMore from 'components/ButtonLoadMore/ButtonLoadMore';\nimport Logo from 'components/Logo/Logo';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport { totalPage } from 'refs/refs';\nimport { getHeroData, updateDataFollowing } from 'utility/mockApi';\nimport avatarImg from '../../images/Boy.png';\nimport {\n  Box,\n  BoxLogo,\n  Button,\n  Img,\n  Item,\n  List,\n  Text,\n  Wrapper,\n} from './TweetsList.styled';\n\nconst TweetsList = () => {\n  const [data, setData] = useState(null);\n  const [pageParams, setPageParams] = useState(1);\n  const [, setSearch] = useSearchParams();\n  // const [isFollowing, setIsFollowing] = useState(false);\n  const [lsData, setLsData] = useState(null);\n\n  useEffect(() => {\n    setSearch(`page=${pageParams}`);\n    getHeroData(pageParams).then(resData => {\n      const result = resData.map(el => {\n        return { ...el, isFollow: false };\n      });\n      setData(result);\n    });\n  }, [pageParams, setSearch]);\n  console.log('data', data);\n  useEffect(() => {\n    setLsData(data);\n    if (data && lsData !== null && data[0].id !== lsData[0].id) {\n      setData([...data, ...lsData]);\n      localStorage.setItem('userData', JSON.stringify([...lsData, ...data]));\n    }\n  }, [data, lsData]);\n\n  const handleFollowing = e => {\n    const userId = e.currentTarget.id;\n    const userFollow = data.find(el => el.id === userId);\n    console.log('userFollow.isFollow', userFollow.isFollow === false);\n\n    const result = !userFollow.isFollow\n      ? (userFollow.followers += 1)\n      : userFollow.isFollow\n      ? (userFollow.followers -= 1)\n      : null;\n\n    updateDataFollowing(userId, result);\n\n    if (userFollow.isFollow === false) {\n      userFollow.isFollow = true;\n      console.log('here', userFollow.isFollow);\n      console.log('data======>', data);\n      return (e.target.style.background = '#5CD3A8');\n    }\n    if (userFollow.isFollow === true) {\n      userFollow.isFollow = false;\n      console.log('data======>', data);\n      return (e.target.style.background = '#EBD8FF');\n    }\n  };\n\n  return (\n    <div>\n      <NavLink to=\"/\">go back</NavLink>\n      <List>\n        {data?.map(({ user, id, avatar, followers, tweets, isFollow }) => {\n          return (\n            <Item key={id}>\n              <BoxLogo>\n                <Logo />\n              </BoxLogo>\n              <Box>\n                <Img\n                  src={avatar ? avatar : avatarImg}\n                  alt=\"Avatar\"\n                  width=\"80\"\n                />\n                <Wrapper>\n                  <Text>{tweets} TWEETS</Text>\n                  <Text>{followers} Followers</Text>\n                </Wrapper>\n                <Button type=\"button\" id={id} onClick={e => handleFollowing(e)}>\n                  {(isFollow && 'Follow') || (!isFollow && 'Following')}\n                </Button>\n              </Box>\n            </Item>\n          );\n        })}\n      </List>\n      {pageParams < totalPage ? (\n        <ButtonLoadMore pageParams={pageParams} setPageParams={setPageParams} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default TweetsList;\n","const { default: TwitsList } = require('components/TweetsList/TweetsList');\n\nconst TwitsPage = () => {\n  return <TwitsList />;\n};\n\nexport default TwitsPage;\n"],"names":["setPageParams","pageParams","type","onClick","axios","params","URLSearchParams","limit","totalPage","console","log","getHeroData","page","data","updateDataFollowing","userId","userFollowers","followers","message","List","styled","Item","p","theme","colors","background","BoxLogo","Box","bg","white","Img","Wrapper","Text","fonts","main","fontWeights","medium","fontSizes","m","Button","isFollowing","SemiBold","s","black","useState","setData","useSearchParams","setSearch","lsData","setLsData","useEffect","then","resData","result","map","el","isFollow","id","localStorage","setItem","JSON","stringify","to","user","avatar","tweets","Logo","src","avatarImg","alt","width","e","currentTarget","userFollow","find","target","style","handleFollowing","TwitsList","require","default"],"sourceRoot":""}